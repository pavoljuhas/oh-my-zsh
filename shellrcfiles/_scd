#compdef scd
#description smart change directory

local curcontext="$curcontext" state line expl ret=1
typeset -A opt_args

local -a indexopts myargs
indexopts=( --add -a --unindex )

myargs=(
    # common options
    "(--help -h)"{--help,-h}"[print help and exit]"

    # options for manipulating directory index
    - index
    "(--recursive -r)"{--recursive,-r}"[use recursive --add or --unindex]"
    "*:directory:_path_files -/"
    "($indexopts)"{--add,-a}"[add specified directories to the index]"
    "($indexopts)--unindex[remove specified directories from the index]"

    # define new directory alias
    - alias
    "--alias=[create alias for this or given directory]:directory-alias:()"
    "*:directory:_path_files -/"

    # remove definition of directory alias
    - unalias
    "--unalias[remove definition of directory alias]"
    "*:: :->scd-alias-name"

    # act on the directory change
    - scd
    "(--all -A)"{--all,-A}"[find also less likely and ignored paths]"
    "--list[print matching directories and exit]"
    "(--verbose -v)"{--verbose,-v}"[show directory ranking and full paths]"
    "(--push -p)"{--push,-p}"[change directory with 'pushd']"
    "*:directories:->scd-targets"
)

_arguments -C $myargs && ret=0


case $state in

    (scd-alias-name)
        local -a scdaliases
        scdaliases=( )
        if (( ${#opt_args} )) && [[ -s ~/.scdalias.zsh ]]; then
            eval "$( setopt extendedglob
                     phome="(#b)(#s)${HOME}(/*)#(#e)"
                     builtin hash -dr
                     source ~/.scdalias.zsh &&
                     for k v in ${(kv)nameddirs}; do
                         scdaliases+=( $k:${v/${~phome}/"~"${match[1]}} )
                     done &&
                     typeset -p scdaliases )"
        fi
        _describe -t scdaliases scdalias scdaliases
        ;;

    (scd-targets)
        local -a scdtargets mylistopts
        scdtargets=( )
        mylistopts=(
            ${opt_args[(i)scd-(-A|--all)]:+"--all"}
        )
        scdtargets=( ${(f)"$(scd --list $mylistopts $line )"} )
        scdtargets=( ${scdtargets:#[#]*} )
        # FIXME
        # local expl
        # _wanted directories expl scdtargets
        ;;

esac
